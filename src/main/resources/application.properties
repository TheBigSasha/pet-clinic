quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=petclinic
%prod.quarkus.datasource.password=changeme
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgresql:5432/petclinicdb
quarkus.datasource.jdbc.min-size=5
quarkus.datasource.jdbc.max-size=15

%dev.quarkus.hibernate-orm.sql-load-script=import.sql
%prod.quarkus.hibernate-orm.sql-load-script=import.sql

quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.database.generation=drop-and-create


quarkus.kubernetes.service-type=load-balancer

quarkus.http.enable-compression=true
quarkus.http.enable-decompression=true
quarkus.qute.strict-rendering=true


# Configure OIDC

quarkus.oidc.auth-server-url=${KEYCLOAK_URL}/auth/realms/${KEYCLOAK_REALM}
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=${KEYCLOAK_CLIENT_SECRET}
#TODO: Fix client secret!


# Tell Dev Services for Keycloak to import the realm file
# This property is not effective when running the application in JVM or Native modes but only in dev and test modes.

quarkus.keycloak.devservices.realm-path=quarkus-realm.json


# Configure OIDC Client

quarkus.oidc-client.client-id=${quarkus.oidc.client-id}
quarkus.oidc-client.credentials.secret=${quarkus.oidc.credentials.secret}
quarkus.oidc-client.grant.type=jwt
quarkus.oidc.application-type=web-app


quarkus.oidc.tls.verification=none
quarkus.keycloak.admin-client.server-url=${KEYCLOAK_URL}/auth

quarkus.oidc.logout.path=/logout
